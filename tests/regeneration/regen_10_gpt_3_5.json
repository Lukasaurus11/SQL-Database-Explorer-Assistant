[
    {
        "question": "What are the last names of the customers in alphabetical order?",
        "generated": "SELECT LastName FROM customers ORDER BY LastName",
        "test": "SELECT DISTINCT LastName FROM customers ORDER BY LastName",
        "generated_results": [
            [
                "ARNN"
            ],
            [
                "ARZT"
            ],
            [
                "CALLENDAR"
            ],
            [
                "CRUZEN"
            ],
            [
                "DOMKOWSKI"
            ],
            [
                "DUKELOW"
            ],
            [
                "DUNLOW"
            ],
            [
                "ENGLEY"
            ],
            [
                "ESPOSITA"
            ],
            [
                "HAFFERKAMP"
            ],
            [
                "HELING"
            ],
            [
                "LOGAN"
            ],
            [
                "MCMAHAN"
            ],
            [
                "MESDAQ"
            ],
            [
                "SLINGLAND"
            ],
            [
                "SOPKO"
            ],
            [
                "STADICK"
            ],
            [
                "STENZ"
            ],
            [
                "TOUSSAND"
            ],
            [
                "ZEME"
            ]
        ],
        "test_results": [
            [
                "ARNN"
            ],
            [
                "ARZT"
            ],
            [
                "CALLENDAR"
            ],
            [
                "CRUZEN"
            ],
            [
                "DOMKOWSKI"
            ],
            [
                "DUKELOW"
            ],
            [
                "DUNLOW"
            ],
            [
                "ENGLEY"
            ],
            [
                "ESPOSITA"
            ],
            [
                "HAFFERKAMP"
            ],
            [
                "HELING"
            ],
            [
                "LOGAN"
            ],
            [
                "MCMAHAN"
            ],
            [
                "MESDAQ"
            ],
            [
                "SLINGLAND"
            ],
            [
                "SOPKO"
            ],
            [
                "STADICK"
            ],
            [
                "STENZ"
            ],
            [
                "TOUSSAND"
            ],
            [
                "ZEME"
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.0,
        "generation_tokens": 489,
        "judging_tokens": 158,
        "generation_failed": false
    },
    {
        "question": "What are the ids with apple flavor?",
        "generated": "SELECT id FROM goods WHERE flavor = \"Apple\"",
        "test": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
        "generated_results": [
            [
                "90-APIE-10"
            ],
            [
                "90-APP-11"
            ],
            [
                "50-APP"
            ],
            [
                "51-APP"
            ]
        ],
        "test_results": [
            [
                "90-APIE-10"
            ],
            [
                "90-APP-11"
            ],
            [
                "50-APP"
            ],
            [
                "51-APP"
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.0009987354278564453,
        "generation_tokens": 628,
        "judging_tokens": 157,
        "generation_failed": false
    },
    {
        "question": "On which date did some customer buy a good that costs more than 15 dollars?",
        "generated": "SELECT Date\nFROM receipts\nWHERE ReceiptNumber IN (\n    SELECT ReceiptNumber\n    FROM items\n    JOIN goods ON items.Item = goods.Id\n    WHERE Price > 15\n)",
        "test": "SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15",
        "generated_results": [
            [
                "17-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ],
            [
                "30-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "19-Oct-2007"
            ],
            [
                "30-Oct-2007"
            ],
            [
                "11-Oct-2007"
            ],
            [
                "13-Oct-2007"
            ],
            [
                "6-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "2-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "27-Oct-2007"
            ],
            [
                "28-Oct-2007"
            ],
            [
                "13-Oct-2007"
            ],
            [
                "14-Oct-2007"
            ],
            [
                "19-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "8-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "29-Oct-2007"
            ],
            [
                "19-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "24-Oct-2007"
            ],
            [
                "28-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "26-Oct-2007"
            ],
            [
                "14-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "13-Oct-2007"
            ],
            [
                "24-Oct-2007"
            ],
            [
                "19-Oct-2007"
            ],
            [
                "29-Oct-2007"
            ],
            [
                "5-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "8-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ],
            [
                "31-Oct-2007"
            ],
            [
                "24-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "2-Oct-2007"
            ],
            [
                "19-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "28-Oct-2007"
            ],
            [
                "31-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "6-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "29-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "14-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "5-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "5-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "29-Oct-2007"
            ],
            [
                "6-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "24-Oct-2007"
            ],
            [
                "31-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "18-Oct-2007"
            ],
            [
                "27-Oct-2007"
            ],
            [
                "18-Oct-2007"
            ],
            [
                "17-Oct-2007"
            ],
            [
                "5-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "27-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "30-Oct-2007"
            ],
            [
                "13-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "14-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "30-Oct-2007"
            ],
            [
                "2-Oct-2007"
            ],
            [
                "17-Oct-2007"
            ],
            [
                "31-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "8-Oct-2007"
            ],
            [
                "30-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "13-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "8-Oct-2007"
            ],
            [
                "2-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "29-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "18-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "11-Oct-2007"
            ],
            [
                "27-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "6-Oct-2007"
            ],
            [
                "28-Oct-2007"
            ],
            [
                "31-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "2-Oct-2007"
            ],
            [
                "1-Oct-2007"
            ],
            [
                "18-Oct-2007"
            ],
            [
                "29-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "14-Oct-2007"
            ],
            [
                "27-Oct-2007"
            ],
            [
                "28-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "24-Oct-2007"
            ],
            [
                "17-Oct-2007"
            ],
            [
                "30-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "17-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "8-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "31-Oct-2007"
            ],
            [
                "13-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "24-Oct-2007"
            ],
            [
                "26-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "29-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "26-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "14-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "13-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ]
        ],
        "test_results": [
            [
                "17-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "19-Oct-2007"
            ],
            [
                "27-Oct-2007"
            ],
            [
                "22-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "10-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ],
            [
                "21-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "20-Oct-2007"
            ],
            [
                "23-Oct-2007"
            ],
            [
                "31-Oct-2007"
            ],
            [
                "3-Oct-2007"
            ],
            [
                "14-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "18-Oct-2007"
            ],
            [
                "6-Oct-2007"
            ],
            [
                "15-Oct-2007"
            ],
            [
                "25-Oct-2007"
            ],
            [
                "8-Oct-2007"
            ]
        ],
        "match": false,
        "confidence_score": 0.9,
        "execution_time": 0.0010004043579101562,
        "generation_tokens": 666,
        "judging_tokens": 196,
        "generation_failed": false
    },
    {
        "question": "Which item was bought the fewest times?",
        "generated": "SELECT item FROM items GROUP BY item ORDER BY COUNT(*) ASC LIMIT 1",
        "test": "SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1",
        "generated_results": [
            [
                "50-CH"
            ]
        ],
        "test_results": [
            [
                "50-CH"
            ]
        ],
        "match": true,
        "confidence_score": 0.9,
        "execution_time": 0.0010008811950683594,
        "generation_tokens": 576,
        "judging_tokens": 165,
        "generation_failed": false
    },
    {
        "question": "What are the distinct ids of customers who bought lemon flavored cake?",
        "generated": "SELECT DISTINCT CustomerId FROM receipts\nJOIN items ON receipts.ReceiptNumber = items.Receipt\nJOIN goods ON items.Item = goods.Id\nWHERE goods.Flavor = 'Lemon' AND goods.Food = 'Cake'",
        "test": "SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  \"Lemon\" AND T1.Food  =  \"Cake\"",
        "generated_results": [
            [
                6
            ],
            [
                11
            ],
            [
                12
            ],
            [
                3
            ],
            [
                9
            ],
            [
                2
            ],
            [
                8
            ]
        ],
        "test_results": [
            [
                6
            ],
            [
                11
            ],
            [
                12
            ],
            [
                3
            ],
            [
                9
            ],
            [
                2
            ],
            [
                8
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.0010006427764892578,
        "generation_tokens": 609,
        "judging_tokens": 197,
        "generation_failed": false
    },
    {
        "question": "What are the distinct ids and prices for goods that cost less than the average good?",
        "generated": "SELECT DISTINCT id, price FROM goods WHERE price < (SELECT AVG(price) FROM goods)",
        "test": "SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)",
        "generated_results": [
            [
                "45-CH",
                3.25
            ],
            [
                "45-CO",
                3.5
            ],
            [
                "45-VA",
                3.25
            ],
            [
                "50-ALM",
                1.45
            ],
            [
                "50-APP",
                1.45
            ],
            [
                "50-APR",
                1.45
            ],
            [
                "50-CH",
                1.75
            ],
            [
                "50-CHS",
                1.75
            ],
            [
                "51-APP",
                1.15
            ],
            [
                "51-APR",
                1.15
            ],
            [
                "51-ATW",
                1.15
            ],
            [
                "51-BC",
                1.95
            ],
            [
                "51-BLU",
                1.15
            ],
            [
                "70-GA",
                1.15
            ],
            [
                "70-GON",
                1.15
            ],
            [
                "70-LEM",
                0.79
            ],
            [
                "70-M-CH-DZ",
                1.25
            ],
            [
                "70-M-VA-SM-DZ",
                1.15
            ],
            [
                "70-MAR",
                1.25
            ],
            [
                "70-R",
                1.09
            ],
            [
                "70-TU",
                1.25
            ],
            [
                "70-W",
                0.79
            ],
            [
                "90-ALM-I",
                3.75
            ],
            [
                "90-APP-11",
                3.25
            ],
            [
                "90-APR-PF",
                3.25
            ],
            [
                "90-BER-11",
                3.25
            ],
            [
                "90-BLK-PF",
                3.25
            ],
            [
                "90-BLU-11",
                3.25
            ],
            [
                "90-CH-PF",
                3.75
            ],
            [
                "90-CHR-11",
                3.25
            ],
            [
                "90-LEM-11",
                3.25
            ],
            [
                "90-PEC-11",
                3.75
            ]
        ],
        "test_results": [
            [
                "45-CH",
                3.25
            ],
            [
                "45-CO",
                3.5
            ],
            [
                "45-VA",
                3.25
            ],
            [
                "50-ALM",
                1.45
            ],
            [
                "50-APP",
                1.45
            ],
            [
                "50-APR",
                1.45
            ],
            [
                "50-CH",
                1.75
            ],
            [
                "50-CHS",
                1.75
            ],
            [
                "51-APP",
                1.15
            ],
            [
                "51-APR",
                1.15
            ],
            [
                "51-ATW",
                1.15
            ],
            [
                "51-BC",
                1.95
            ],
            [
                "51-BLU",
                1.15
            ],
            [
                "70-GA",
                1.15
            ],
            [
                "70-GON",
                1.15
            ],
            [
                "70-LEM",
                0.79
            ],
            [
                "70-M-CH-DZ",
                1.25
            ],
            [
                "70-M-VA-SM-DZ",
                1.15
            ],
            [
                "70-MAR",
                1.25
            ],
            [
                "70-R",
                1.09
            ],
            [
                "70-TU",
                1.25
            ],
            [
                "70-W",
                0.79
            ],
            [
                "90-ALM-I",
                3.75
            ],
            [
                "90-APP-11",
                3.25
            ],
            [
                "90-APR-PF",
                3.25
            ],
            [
                "90-BER-11",
                3.25
            ],
            [
                "90-BLK-PF",
                3.25
            ],
            [
                "90-BLU-11",
                3.25
            ],
            [
                "90-CH-PF",
                3.75
            ],
            [
                "90-CHR-11",
                3.25
            ],
            [
                "90-LEM-11",
                3.25
            ],
            [
                "90-PEC-11",
                3.75
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.0005075931549072266,
        "generation_tokens": 729,
        "judging_tokens": 174,
        "generation_failed": false
    },
    {
        "question": "Give the flavors of Cakes that are not available for Tart.",
        "generated": "SELECT flavor \nFROM goods \nWHERE food = \"Cake\" \nAND flavor NOT IN (SELECT DISTINCT flavor FROM goods WHERE food = \"Tart\")",
        "test": "SELECT DISTINCT flavor FROM goods WHERE food  =  \"Cake\" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  \"Tart\"",
        "generated_results": [
            [
                "Casino"
            ],
            [
                "Opera"
            ],
            [
                "Strawberry"
            ],
            [
                "Truffle"
            ],
            [
                "Napoleon"
            ]
        ],
        "test_results": [
            [
                "Casino"
            ],
            [
                "Napoleon"
            ],
            [
                "Opera"
            ],
            [
                "Strawberry"
            ],
            [
                "Truffle"
            ]
        ],
        "match": false,
        "confidence_score": 1.0,
        "execution_time": 0.0,
        "generation_tokens": 429,
        "judging_tokens": 182,
        "generation_failed": false
    },
    {
        "question": "What is average price of goods whose flavor is blackberry or blueberry?",
        "generated": "SELECT avg(price) FROM goods WHERE flavor = \"Blackberry\" OR flavor = \"Blueberry\"",
        "test": "SELECT avg(price) FROM goods WHERE flavor  =  \"Blackberry\" OR flavor  =  \"Blueberry\"",
        "generated_results": [
            [
                2.5500000000000003
            ]
        ],
        "test_results": [
            [
                2.5500000000000003
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.0009915828704833984,
        "generation_tokens": 391,
        "judging_tokens": 174,
        "generation_failed": false
    },
    {
        "question": "On which day did the bakery sell more than 100 dollars in total.",
        "generated": "SELECT Date, SUM(Price) AS TotalPrice\nFROM receipts\nJOIN items ON receipts.ReceiptNumber = items.Receipt\nJOIN goods ON items.Item = goods.Id\nGROUP BY Date\nHAVING SUM(Price) > 100;",
        "test": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
        "generated_results": [
            [
                "10-Oct-2007",
                131.92
            ],
            [
                "12-Oct-2007",
                169.87
            ],
            [
                "16-Oct-2007",
                112.97
            ],
            [
                "19-Oct-2007",
                111.78
            ],
            [
                "4-Oct-2007",
                137.79
            ],
            [
                "7-Oct-2007",
                104.98
            ],
            [
                "9-Oct-2007",
                112.97
            ]
        ],
        "test_results": [
            [
                "10-Oct-2007"
            ],
            [
                "12-Oct-2007"
            ],
            [
                "16-Oct-2007"
            ],
            [
                "19-Oct-2007"
            ],
            [
                "4-Oct-2007"
            ],
            [
                "7-Oct-2007"
            ],
            [
                "9-Oct-2007"
            ]
        ],
        "match": false,
        "confidence_score": 0.9,
        "execution_time": 0.00099945068359375,
        "generation_tokens": 680,
        "judging_tokens": 205,
        "generation_failed": false
    },
    {
        "question": "Give me a list of all the distinct items bought by the customer number 15.",
        "generated": "SELECT DISTINCT item FROM items WHERE Receipt IN (SELECT ReceiptNumber FROM receipts WHERE CustomerId = 15)",
        "test": "SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15",
        "generated_results": [
            [
                "70-M-CH-DZ"
            ],
            [
                "70-LEM"
            ],
            [
                "70-TU"
            ],
            [
                "90-BER-11"
            ],
            [
                "20-CA-7.5"
            ],
            [
                "25-STR-9"
            ],
            [
                "51-ATW"
            ],
            [
                "90-APR-PF"
            ],
            [
                "45-VA"
            ],
            [
                "90-CH-PF"
            ],
            [
                "90-BLK-PF"
            ],
            [
                "51-BC"
            ],
            [
                "90-APP-11"
            ],
            [
                "70-GON"
            ],
            [
                "90-LEM-11"
            ]
        ],
        "test_results": [
            [
                "70-TU"
            ],
            [
                "25-STR-9"
            ],
            [
                "70-GON"
            ],
            [
                "90-LEM-11"
            ],
            [
                "90-APR-PF"
            ],
            [
                "70-LEM"
            ],
            [
                "70-M-CH-DZ"
            ],
            [
                "90-APP-11"
            ],
            [
                "45-VA"
            ],
            [
                "51-ATW"
            ],
            [
                "90-CH-PF"
            ],
            [
                "90-BLK-PF"
            ],
            [
                "20-CA-7.5"
            ],
            [
                "51-BC"
            ],
            [
                "90-BER-11"
            ]
        ],
        "match": false,
        "confidence_score": 1.0,
        "execution_time": 0.0015056133270263672,
        "generation_tokens": 603,
        "judging_tokens": 177,
        "generation_failed": false
    },
    {
        "question": "Give the ids of cookes that are cheaper than any croissant.",
        "generated": "SELECT id FROM goods WHERE food = 'Cookie' AND price < (SELECT MIN(price) FROM goods WHERE food = 'Croissant');",
        "test": "SELECT id FROM goods WHERE food  =  \"Cookie\" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')",
        "generated_results": [
            [
                "70-GA"
            ],
            [
                "70-GON"
            ],
            [
                "70-R"
            ],
            [
                "70-LEM"
            ],
            [
                "70-MAR"
            ],
            [
                "70-TU"
            ],
            [
                "70-W"
            ]
        ],
        "test_results": [
            [
                "70-GA"
            ],
            [
                "70-GON"
            ],
            [
                "70-R"
            ],
            [
                "70-LEM"
            ],
            [
                "70-MAR"
            ],
            [
                "70-TU"
            ],
            [
                "70-W"
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.0010104179382324219,
        "generation_tokens": 462,
        "judging_tokens": 180,
        "generation_failed": false
    },
    {
        "question": "Give the average price for each food type.",
        "generated": "SELECT AVG(price) AS average_price, food FROM goods GROUP BY food",
        "test": "SELECT avg(price) ,  food FROM goods GROUP BY food",
        "generated_results": [
            [
                1.95,
                "Bear Claw"
            ],
            [
                13.027142857142858,
                "Cake"
            ],
            [
                1.0671428571428572,
                "Cookie"
            ],
            [
                1.5699999999999998,
                "Croissant"
            ],
            [
                1.15,
                "Danish"
            ],
            [
                3.3333333333333335,
                "Eclair"
            ],
            [
                1.2,
                "Meringue"
            ],
            [
                5.25,
                "Pie"
            ],
            [
                3.4,
                "Tart"
            ],
            [
                1.15,
                "Twist"
            ]
        ],
        "test_results": [
            [
                1.95,
                "Bear Claw"
            ],
            [
                13.027142857142858,
                "Cake"
            ],
            [
                1.0671428571428572,
                "Cookie"
            ],
            [
                1.5699999999999998,
                "Croissant"
            ],
            [
                1.15,
                "Danish"
            ],
            [
                3.3333333333333335,
                "Eclair"
            ],
            [
                1.2,
                "Meringue"
            ],
            [
                5.25,
                "Pie"
            ],
            [
                3.4,
                "Tart"
            ],
            [
                1.15,
                "Twist"
            ]
        ],
        "match": true,
        "confidence_score": 0.9,
        "execution_time": 0.0,
        "generation_tokens": 675,
        "judging_tokens": 164,
        "generation_failed": false
    },
    {
        "question": "What are the ids of Cookie and Cake that cost between 3 and 7 dollars.",
        "generated": null,
        "test": "SELECT id FROM goods WHERE food  =  \"Cookie\" OR food  =  \"Cake\" AND price BETWEEN 3 AND 7",
        "generated_results": null,
        "test_results": null,
        "match": false,
        "confidence_score": 0,
        "execution_time": null,
        "generation_tokens": 794,
        "judging_tokens": 188,
        "generation_failed": true
    },
    {
        "question": "What is the receipt number with the latest date, and what is that date?",
        "generated": "SELECT ReceiptNumber, Date \nFROM receipts \nORDER BY Date DESC \nLIMIT 1",
        "test": "SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)",
        "generated_results": [
            [
                11923,
                "9-Oct-2007"
            ]
        ],
        "test_results": [
            [
                11923,
                "9-Oct-2007"
            ],
            [
                28117,
                "9-Oct-2007"
            ],
            [
                48647,
                "9-Oct-2007"
            ],
            [
                56724,
                "9-Oct-2007"
            ],
            [
                61008,
                "9-Oct-2007"
            ],
            [
                65091,
                "9-Oct-2007"
            ],
            [
                70162,
                "9-Oct-2007"
            ],
            [
                77406,
                "9-Oct-2007"
            ],
            [
                89588,
                "9-Oct-2007"
            ],
            [
                95514,
                "9-Oct-2007"
            ]
        ],
        "match": false,
        "confidence_score": 0.9,
        "execution_time": 0.0010344982147216797,
        "generation_tokens": 710,
        "judging_tokens": 172,
        "generation_failed": false
    },
    {
        "question": "Find all the receipt numbers in which customer with last name LOGAN purchased Croissant.",
        "generated": "SELECT ReceiptNumber \nFROM receipts \nWHERE CustomerId = (SELECT Id \n                    FROM customers \n                    WHERE LastName = 'LOGAN') \nAND ReceiptNumber IN \n    (SELECT receipt \n     FROM items \n     WHERE item IN \n        (SELECT Id \n         FROM goods \n         WHERE Food = 'Croissant'));",
        "test": "SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  \"Croissant\" AND T4.LastName  =  'LOGAN'",
        "generated_results": [
            [
                38849
            ],
            [
                39685
            ],
            [
                45062
            ],
            [
                86085
            ]
        ],
        "test_results": [
            [
                86085
            ],
            [
                86085
            ],
            [
                39685
            ],
            [
                38849
            ],
            [
                45062
            ]
        ],
        "match": false,
        "confidence_score": 0.9,
        "execution_time": 0.0010056495666503906,
        "generation_tokens": 989,
        "judging_tokens": 222,
        "generation_failed": false
    },
    {
        "question": "Give the id and flavor of the most expensive cake.",
        "generated": "SELECT id, flavor FROM goods WHERE price = (SELECT MAX(price) FROM goods WHERE food = 'Cake') AND food = 'Cake';",
        "test": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY price DESC LIMIT 1",
        "generated_results": [
            [
                "20-CA-7.5",
                "Casino"
            ],
            [
                "24-8x10",
                "Opera"
            ],
            [
                "26-8x10",
                "Truffle"
            ]
        ],
        "test_results": [
            [
                "20-CA-7.5",
                "Casino"
            ]
        ],
        "match": false,
        "confidence_score": 1.0,
        "execution_time": 0.0015254020690917969,
        "generation_tokens": 534,
        "judging_tokens": 180,
        "generation_failed": false
    },
    {
        "question": "On what dates did the bakery sell more than 100 dollars worth of goods in total?",
        "generated": null,
        "test": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
        "generated_results": null,
        "test_results": null,
        "match": false,
        "confidence_score": 0,
        "execution_time": null,
        "generation_tokens": 655,
        "judging_tokens": 205,
        "generation_failed": true
    },
    {
        "question": "What are all the receipt numbers that have a good with a price above 10 or have the earliest date?",
        "generated": "SELECT ReceiptNumber \nFROM receipts \nWHERE ReceiptNumber IN (\n    SELECT T1.Receipt \n    FROM items AS T1 \n    JOIN goods AS T2 ON T1.item = T2.id \n    WHERE T2.price > 10\n) \nOR Date = (SELECT MIN(Date) FROM receipts);",
        "test": "SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)",
        "generated_results": [
            [
                11891
            ],
            [
                12396
            ],
            [
                12698
            ],
            [
                12800
            ],
            [
                13355
            ],
            [
                16034
            ],
            [
                16532
            ],
            [
                17729
            ],
            [
                19002
            ],
            [
                24829
            ],
            [
                25906
            ],
            [
                26148
            ],
            [
                26240
            ],
            [
                28117
            ],
            [
                29908
            ],
            [
                32701
            ],
            [
                33060
            ],
            [
                33456
            ],
            [
                34579
            ],
            [
                34910
            ],
            [
                35904
            ],
            [
                37636
            ],
            [
                38849
            ],
            [
                40305
            ],
            [
                44590
            ],
            [
                44798
            ],
            [
                45062
            ],
            [
                45976
            ],
            [
                49977
            ],
            [
                51991
            ],
            [
                52761
            ],
            [
                53240
            ],
            [
                53376
            ],
            [
                53922
            ],
            [
                55944
            ],
            [
                58770
            ],
            [
                61008
            ],
            [
                61948
            ],
            [
                64451
            ],
            [
                64477
            ],
            [
                64861
            ],
            [
                65165
            ],
            [
                67314
            ],
            [
                68199
            ],
            [
                68753
            ],
            [
                70162
            ],
            [
                70655
            ],
            [
                72207
            ],
            [
                73437
            ],
            [
                76663
            ],
            [
                77032
            ],
            [
                77406
            ],
            [
                83085
            ],
            [
                85492
            ],
            [
                85858
            ],
            [
                95514
            ],
            [
                96258
            ],
            [
                96402
            ],
            [
                96531
            ],
            [
                96761
            ],
            [
                98806
            ],
            [
                99994
            ]
        ],
        "test_results": [
            [
                11891
            ],
            [
                12396
            ],
            [
                12698
            ],
            [
                12800
            ],
            [
                13355
            ],
            [
                16034
            ],
            [
                16532
            ],
            [
                17729
            ],
            [
                19002
            ],
            [
                24829
            ],
            [
                25906
            ],
            [
                26148
            ],
            [
                26240
            ],
            [
                28117
            ],
            [
                29908
            ],
            [
                32701
            ],
            [
                33060
            ],
            [
                33456
            ],
            [
                34579
            ],
            [
                34910
            ],
            [
                35904
            ],
            [
                37636
            ],
            [
                38849
            ],
            [
                40305
            ],
            [
                44590
            ],
            [
                44798
            ],
            [
                45062
            ],
            [
                45976
            ],
            [
                49977
            ],
            [
                51991
            ],
            [
                52761
            ],
            [
                53240
            ],
            [
                53376
            ],
            [
                53922
            ],
            [
                55944
            ],
            [
                58770
            ],
            [
                61008
            ],
            [
                61948
            ],
            [
                64451
            ],
            [
                64477
            ],
            [
                64861
            ],
            [
                65165
            ],
            [
                67314
            ],
            [
                68199
            ],
            [
                68753
            ],
            [
                70162
            ],
            [
                70655
            ],
            [
                72207
            ],
            [
                73437
            ],
            [
                76663
            ],
            [
                77032
            ],
            [
                77406
            ],
            [
                83085
            ],
            [
                85492
            ],
            [
                85858
            ],
            [
                95514
            ],
            [
                96258
            ],
            [
                96402
            ],
            [
                96531
            ],
            [
                96761
            ],
            [
                98806
            ],
            [
                99994
            ]
        ],
        "match": true,
        "confidence_score": 0.9,
        "execution_time": 0.0019922256469726562,
        "generation_tokens": 779,
        "judging_tokens": 226,
        "generation_failed": false
    },
    {
        "question": "Return the ordered list of all good ids.",
        "generated": "SELECT id FROM goods ORDER BY id",
        "test": "SELECT DISTINCT id FROM goods ORDER BY id",
        "generated_results": [
            [
                "20-BC-C-10"
            ],
            [
                "20-BC-L-10"
            ],
            [
                "20-CA-7.5"
            ],
            [
                "24-8x10"
            ],
            [
                "25-STR-9"
            ],
            [
                "26-8x10"
            ],
            [
                "45-CH"
            ],
            [
                "45-CO"
            ],
            [
                "45-VA"
            ],
            [
                "46-11"
            ],
            [
                "50-ALM"
            ],
            [
                "50-APP"
            ],
            [
                "50-APR"
            ],
            [
                "50-CH"
            ],
            [
                "50-CHS"
            ],
            [
                "51-APP"
            ],
            [
                "51-APR"
            ],
            [
                "51-ATW"
            ],
            [
                "51-BC"
            ],
            [
                "51-BLU"
            ],
            [
                "70-GA"
            ],
            [
                "70-GON"
            ],
            [
                "70-LEM"
            ],
            [
                "70-M-CH-DZ"
            ],
            [
                "70-M-VA-SM-DZ"
            ],
            [
                "70-MAR"
            ],
            [
                "70-R"
            ],
            [
                "70-TU"
            ],
            [
                "70-W"
            ],
            [
                "90-ALM-I"
            ],
            [
                "90-APIE-10"
            ],
            [
                "90-APP-11"
            ],
            [
                "90-APR-PF"
            ],
            [
                "90-BER-11"
            ],
            [
                "90-BLK-PF"
            ],
            [
                "90-BLU-11"
            ],
            [
                "90-CH-PF"
            ],
            [
                "90-CHR-11"
            ],
            [
                "90-LEM-11"
            ],
            [
                "90-PEC-11"
            ]
        ],
        "test_results": [
            [
                "20-BC-C-10"
            ],
            [
                "20-BC-L-10"
            ],
            [
                "20-CA-7.5"
            ],
            [
                "24-8x10"
            ],
            [
                "25-STR-9"
            ],
            [
                "26-8x10"
            ],
            [
                "45-CH"
            ],
            [
                "45-CO"
            ],
            [
                "45-VA"
            ],
            [
                "46-11"
            ],
            [
                "50-ALM"
            ],
            [
                "50-APP"
            ],
            [
                "50-APR"
            ],
            [
                "50-CH"
            ],
            [
                "50-CHS"
            ],
            [
                "51-APP"
            ],
            [
                "51-APR"
            ],
            [
                "51-ATW"
            ],
            [
                "51-BC"
            ],
            [
                "51-BLU"
            ],
            [
                "70-GA"
            ],
            [
                "70-GON"
            ],
            [
                "70-LEM"
            ],
            [
                "70-M-CH-DZ"
            ],
            [
                "70-M-VA-SM-DZ"
            ],
            [
                "70-MAR"
            ],
            [
                "70-R"
            ],
            [
                "70-TU"
            ],
            [
                "70-W"
            ],
            [
                "90-ALM-I"
            ],
            [
                "90-APIE-10"
            ],
            [
                "90-APP-11"
            ],
            [
                "90-APR-PF"
            ],
            [
                "90-BER-11"
            ],
            [
                "90-BLK-PF"
            ],
            [
                "90-BLU-11"
            ],
            [
                "90-CH-PF"
            ],
            [
                "90-CHR-11"
            ],
            [
                "90-LEM-11"
            ],
            [
                "90-PEC-11"
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.0009889602661132812,
        "generation_tokens": 492,
        "judging_tokens": 155,
        "generation_failed": false
    },
    {
        "question": "Find the ids of goods that have apple flavor.",
        "generated": "SELECT id FROM goods WHERE flavor = \"Apple\"",
        "test": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
        "generated_results": [
            [
                "90-APIE-10"
            ],
            [
                "90-APP-11"
            ],
            [
                "50-APP"
            ],
            [
                "51-APP"
            ]
        ],
        "test_results": [
            [
                "90-APIE-10"
            ],
            [
                "90-APP-11"
            ],
            [
                "50-APP"
            ],
            [
                "51-APP"
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.000997304916381836,
        "generation_tokens": 844,
        "judging_tokens": 159,
        "generation_failed": false
    },
    {
        "question": "What are the minimum and maximum prices of food goods, ordered by food?",
        "generated": "SELECT MIN(price) AS min_price, MAX(price) AS max_price, food\nFROM goods\nGROUP BY food\nORDER BY food",
        "test": "SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food",
        "generated_results": [
            [
                1.95,
                1.95,
                "Bear Claw"
            ],
            [
                8.95,
                15.95,
                "Cake"
            ],
            [
                0.79,
                1.25,
                "Cookie"
            ],
            [
                1.45,
                1.75,
                "Croissant"
            ],
            [
                1.15,
                1.15,
                "Danish"
            ],
            [
                3.25,
                3.5,
                "Eclair"
            ],
            [
                1.15,
                1.25,
                "Meringue"
            ],
            [
                5.25,
                5.25,
                "Pie"
            ],
            [
                3.25,
                3.75,
                "Tart"
            ],
            [
                1.15,
                1.15,
                "Twist"
            ]
        ],
        "test_results": [
            [
                1.95,
                1.95,
                "Bear Claw"
            ],
            [
                8.95,
                15.95,
                "Cake"
            ],
            [
                0.79,
                1.25,
                "Cookie"
            ],
            [
                1.45,
                1.75,
                "Croissant"
            ],
            [
                1.15,
                1.15,
                "Danish"
            ],
            [
                3.25,
                3.5,
                "Eclair"
            ],
            [
                1.15,
                1.25,
                "Meringue"
            ],
            [
                5.25,
                5.25,
                "Pie"
            ],
            [
                3.25,
                3.75,
                "Tart"
            ],
            [
                1.15,
                1.15,
                "Twist"
            ]
        ],
        "match": true,
        "confidence_score": 1.0,
        "execution_time": 0.003000497817993164,
        "generation_tokens": 572,
        "judging_tokens": 181,
        "generation_failed": false
    }
]